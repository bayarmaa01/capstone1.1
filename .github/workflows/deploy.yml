name: CI/CD Pipeline - Automated Attendance System

on:
  push:
    branches:
      - main  # Trigger only when pushing to main branch

jobs:
  build:
    name: ðŸ§± Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (frontend)
        working-directory: frontend
        run: npm install

      - name: Install dependencies (backend)
        working-directory: backend
        run: npm install

      - name: Run Lint (optional)
        run: echo "âœ… Lint checks passed (add eslint here if needed)"

      - name: Build Docker images
        run: |
          docker build -t attendance-backend ./backend
          docker build -t attendance-frontend ./frontend
          docker build -t attendance-face ./face-service

  deploy:
    name: ðŸš€ Deploy to Server
    runs-on: ubuntu-latest
    needs: build  # Wait for build job to complete

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: ðŸš€ Deploy via SSH and Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            echo "ðŸ“¦ Pulling latest code..."
            cd /home/ubuntu/automated-attendance-system || git clone https://github.com/<your-username>/automated-attendance-system.git
            cd automated-attendance-system
            git pull origin main

            echo "ðŸ§¹ Stopping old containers..."
            docker-compose down || true

            echo "ðŸ”¨ Building new containers..."
            docker-compose build

            echo "ðŸš€ Starting app..."
            docker-compose up -d

            echo "âœ… Deployment successful!"
          EOF
